#!/bin/bash

main() {
    if [ $# -eq 0 ]
    then
        echo "no args"
        exit
    fi

    commit_message=""
    force_push=""

    # Iterate through all command-line arguments
    while [[ $# -gt 0 ]]; do
    case "$1" in
        -f)
        # Set the flag if '-f' is present
        force_push="-f"
        shift
        ;;
        *)
        # Assume any other argument is the input string
        commit_message="$1"
        shift
        ;;
    esac
    done

    # get current branch
    branch=$(git rev-parse --abbrev-ref HEAD)
    echo $branch

    # print all branches
    echo -e "\n\033[1mBraches:\033[0m"
    git branch

    # print commit message arg
    echo -e "\n\033[1mCommit message:\033[0m \n$1"

    if question "Commit?"; then
        git add .
        git commit -m "$commit_message"
    fi

    if question "Run rubocop test?"; then
        rake test TEST=test/lint/rubocop_test.rb
    fi

    if question "Push?"; then
        git push origin $force_push $brach
    else
        exit
    fi

    # if question "PR?"; then
    #     info=`git config --get remote.origin.url | grep -o -P '(?<=com:).*(?=.git)'`
    #     link="https://github.com/$info/compare/develop...feature/$branch"
    #     brave-browser $link
    # else
    #     exit
    # fi
}

question() {
    echo -e -n "\n\n\033[1m${1}\033[0m [y/n]: "
    declare -i answer
    while true; do
        read yn
        case $yn in
            [Yy]* ) return 0;; # true
            [Nn]* ) return 1;; # false
            * ) echo "Please answer yes or no.";;
        esac
    done
}

main "$@"
exit

# l=`git config --get remote.origin.url | grep -o -P '(?<=com:).*(?=.git)'`
# s="https://github.com/$l/tree/ofAndMore"
